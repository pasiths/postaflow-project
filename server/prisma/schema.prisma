// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id       Int        @id @default(autoincrement())
  username String     @unique
  fName    String
  lName    String
  email    String     @unique
  phoneNum String
  address  String
  password String
  role     UserRole
  status   UserStatus @default(PENDING)

  Mail Mail[]
}

enum UserRole {
  MAIL_DELIVERER
  POSTALCLERK
  ADMIN
}

enum UserStatus {
  PENDING
  ACTIVE
  INACTIVE
}

model RoutingArea {
  id         Int    @id @default(autoincrement())
  homeNumber String
  address    String

  Mail Mail[]
}

model Customer {
  id         Int    @id @default(autoincrement())
  fName      String
  lName      String
  email      String @unique
  contactNum String
  address    String

  Bill Bill[]

  Mail Mail[]
}

model Inventory {
  id            Int         @id @default(autoincrement())
  itemName      String
  quantity      Int
  stockStatus   StockStatus
  lastOrderDate DateTime

  Mail Mail[]
}

enum StockStatus {
  IN_STOCK
  OUT_STOCK
}

model Report {
  id         Int        @id @default(autoincrement())
  reportType ReportType
  Date       DateTime
}

enum ReportType {
  INVENTORY
  MAIL
}

model Mail {
  id              Int        @id @default(autoincrement())
  receiverName    String
  receiverAddress String
  type            MailType
  status          MailStatus @default(PENDING)

  senderId Int
  sender   Customer @relation(fields: [senderId], references: [id])

  routingAreaId Int?
  routingArea   RoutingArea? @relation(fields: [routingAreaId], references: [id])

  inventoryId Int?
  inventory   Inventory? @relation(fields: [inventoryId], references: [id])

  employeeId Int?
  employee   Employee? @relation(fields: [employeeId], references: [id])
}

enum MailType {
  LETTER
  PARCEL
  DOCUMENT
}

enum MailStatus {
  PENDING
  IN_TRANSIT
  DELIVERED
}

model Bill {
  id            Int           @id @default(autoincrement())
  amount        Float
  billType      BillType
  paymentStatus PaymentStatus

  clientId Int
  client   Customer @relation(fields: [clientId], references: [id])

  Payment Payment[]
}

enum BillType {
  INVOICE
  RECEIPT
}

enum PaymentStatus {
  PAID
  UNPAID
}

model Payment {
  id            Int           @id @default(autoincrement())
  paymentDate   DateTime
  amountPaid    Float
  paymentMethod PaymentMethod

  billId Int
  bill   Bill @relation(fields: [billId], references: [id])
}

enum PaymentMethod {
  CASH
  CREDIT_CARD
  DEBIT_CARD
  BANK_TRANSFER
}
